const express = require("express");
const axios = require("axios");
require("dotenv").config();

const router = express.Router();
const GOOGLE_BOOKS_API_KEY = process.env.GOOGLE_BOOKS_API_KEY;
const booksApiUrl = "https://www.googleapis.com/books/v1/volumes?q=";

// üìö –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–Ω–∏–≥–∏ –ø–æ –∂–∞–Ω—Ä–∞–º
const categories = [
    { name: "–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞", query: "subject:science fiction" },
    { name: "–î–µ—Ç–µ–∫—Ç–∏–≤—ã", query: "subject:detective" },
    { name: "–§—ç–Ω—Ç–µ–∑–∏", query: "subject:fantasy" },
    { name: "–†–æ–º–∞–Ω—ã", query: "subject:romance" },
    { name: "–ò—Å—Ç–æ—Ä–∏—è", query: "subject:history" }
];

router.get("/popular", async (req, res) => {
    try {
        const categoryResults = await Promise.all(
            categories.map(async (category) => {
                const response = await axios.get(`${booksApiUrl}${category.query}&key=${GOOGLE_BOOKS_API_KEY}`);
                const books = response.data.items?.slice(0, 5).map(item => ({
                    title: item.volumeInfo.title || "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è",
                    author: item.volumeInfo.authors?.join(", ") || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä",
                    image: item.volumeInfo.imageLinks?.thumbnail || "/default-cover.jpg"
                })) || [];

                return { name: category.name, books };
            })
        );

        res.render("popularBooks", { categories: categoryResults });
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–Ω–∏–≥:", error);
        res.status(500).render("error", { message: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–Ω–∏–≥", user: req.session.user || null });
    }
});

module.exports = router;
